{
  "abi": [
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "/Users/carsonterbush/.brownie/packages/Uniswap/v3-periphery@1.3.0/contracts/interfaces/IPeripheryPayments.sol"
  },
  "ast": {
    "absolutePath": "/Users/carsonterbush/.brownie/packages/Uniswap/v3-periphery@1.3.0/contracts/interfaces/IPeripheryPayments.sol",
    "exportedSymbols": {
      "IPeripheryPayments": [
        3215
      ]
    },
    "id": 3216,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3191,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3192,
          "nodeType": "StructuredDocumentation",
          "src": "71:92:25",
          "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
        },
        "fullyImplemented": false,
        "id": 3215,
        "linearizedBaseContracts": [
          3215
        ],
        "name": "IPeripheryPayments",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 3193,
              "nodeType": "StructuredDocumentation",
              "src": "198:302:25",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
            },
            "functionSelector": "49404b7c",
            "id": 3200,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWETH9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3195,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 3200,
                  "src": "526:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3197,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3200,
                  "src": "549:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:42:25"
            },
            "returnParameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:25"
            },
            "scope": 3215,
            "src": "505:80:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3201,
              "nodeType": "StructuredDocumentation",
              "src": "591:225:25",
              "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "12210e8a",
            "id": 3204,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:25"
            },
            "returnParameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:25"
            },
            "scope": 3215,
            "src": "821:38:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3205,
              "nodeType": "StructuredDocumentation",
              "src": "865:427:25",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "df2ab5bb",
            "id": 3214,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3207,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3214,
                  "src": "1326:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3209,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nodeType": "VariableDeclaration",
                  "scope": 3214,
                  "src": "1349:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3211,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3214,
                  "src": "1380:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:87:25"
            },
            "returnParameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:25"
            },
            "scope": 3215,
            "src": "1297:124:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3216,
        "src": "163:1260:25"
      }
    ],
    "src": "45:1379:25"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "IPeripheryPayments",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "refundETH()": {
        "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount",
        "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
      },
      "sweepToken(address,uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
        "notice": "Transfers the full amount of a token held by this contract to recipient",
        "params": {
          "amountMinimum": "The minimum amount of token required for a transfer",
          "recipient": "The destination address of the token",
          "token": "The contract address of the token which will be transferred to `recipient`"
        }
      },
      "unwrapWETH9(uint256,address)": {
        "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
        "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH.",
        "params": {
          "amountMinimum": "The minimum amount of WETH9 to unwrap",
          "recipient": "The address receiving ETH"
        }
      }
    },
    "notice": "Functions to ease deposits and withdrawals of ETH",
    "title": "Periphery Payments",
    "version": 1
  },
  "offset": [
    163,
    1423
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "4ddd5c8d067b9e5d3aeb027bc39c980efc4dbe9d",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n",
  "sourceMap": "",
  "sourcePath": "/Users/carsonterbush/.brownie/packages/Uniswap/v3-periphery@1.3.0/contracts/interfaces/IPeripheryPayments.sol",
  "type": "interface"
}